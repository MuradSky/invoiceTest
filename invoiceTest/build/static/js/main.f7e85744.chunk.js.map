{"version":3,"sources":["Components/user.svg","Components/Login/LoginInput.js","Components/Login/LoginButton.js","Components/Login/Login.js","Components/Sidebar/Sidebar.js","Components/Terminals/Terminals.js","Components/Buyers/user.js","Components/Buyers/Buyers.js","Components/Buyers/UserId.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","id","name","type","value","onChange","placeholder","className","classnames","Button","disabled","text","Login","handleChange","event","password","target","passValid","setState","test","handleSubmit","preventDefault","fetch","state","login","then","res","json","data","getData","handleSuccessfulAuth","history","push","passError","this","handleLogin","localStorage","setItem","JSON","stringify","isFormError","src","user","alt","onSubmit","LoginInput","LoginButton","Component","Sidebar","container","React","createRef","isSideClick","handleClickOutside","current","contains","handleClick","parse","getItem","document","addEventListener","removeEventListener","ref","onClick","to","avatar_url","ListRemove","label","ListText","Post","description","removeList","PostList","postList","map","item","index","key","Terminals","addList","list","filter","e","idx","bind","check","amount","total","completed","TableCell","buyer","BuyersHead","Buyer","BuyerList","i","Search","search","Buyers","users","filtered","newList","lc","toLowerCase","includes","console","log","todos","UserIDOne","match","location","params","NotFound","App","isSuccess","logOut","exact","path","render","component","UserId","Boolean","window","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f7e85744.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.15eeae14.svg\";","import React from 'react';\r\n\r\nconst Input = props => {\r\n\r\n    return(  \r\n        <input\r\n            // style={props.isError ? {color: \"red\"} : {}} \r\n            id={props.name}\r\n            name={props.name}\r\n            type={props.type}\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            placeholder={props.placeholder}\r\n            className = {props.classnames}\r\n            {...props}\r\n            \r\n        />\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react'; \r\n\r\nconst Button = props =>{\r\n\r\n    return(\r\n        <button type=\"submit\" className={props.className} disabled={props.disabled} >\r\n            {props.text}\r\n        </button>\r\n    );\r\n};  \r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport LoginInput from './LoginInput';\r\nimport LoginButton from './LoginButton';\r\nimport user from '../user.svg';\r\nimport './Login.css'\r\nclass Login extends Component{\r\n    userData;\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { \r\n            login: '',\r\n            password: '',\r\n            getData: '',\r\n            passError: false,\r\n        };     \r\n    }\r\n    \r\n    handleChange = (event)  => {\r\n        const password = event.target.value;\r\n        const passValid = this.passValid (password);\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            passError: passValid\r\n        })\r\n    }\r\n    passValid = (password) =>{\r\n        const passReg = /.*([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+).*/;\r\n        return passReg.test(password);\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        fetch(`https://api.github.com/users/${this.state.login}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    getData: data,\r\n                })\r\n                this.handleSuccessfulAuth(data.data)\r\n                const login = this.state.login;\r\n                const getData = this.state.getData;\r\n                if(getData.login == login ) {\r\n                    this.props.history.push('/terminals')\r\n                      \r\n                } \r\n            });\r\n    }\r\n    handleSuccessfulAuth(data) {\r\n        this.props.handleLogin(data)\r\n        const login = this.state.login;\r\n        const getData = this.state.getData;\r\n        if(getData.login == login ) {\r\n            this.props.history.push('/terminals')\r\n        } \r\n    }\r\n    componentDidUpdate() {\r\n         \r\n        localStorage.setItem('user', JSON.stringify(this.state.getData)); \r\n    }\r\n    render() {\r\n        const isFormError = this.state.passError ;\r\n        return (\r\n            <div className=\"Login faded\">\r\n                <div className=\"Login__icon\">\r\n                    <img src={user} className=\"Login__img\" alt=\"User\" />\r\n                </div>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}  >\r\n                    <LoginInput \r\n                        type={'text'}\r\n                        name={'login'}\r\n                        value = {this.state.login}\r\n                        className={'form__input'}\r\n                        placeholder={'Логин'}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <LoginInput \r\n                        type={'password'}\r\n                        name={'password'}\r\n                        value = {this.state.password}\r\n                        className={'form__input'}\r\n                        placeholder={'Пароль'}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <LoginButton \r\n                        text={\"Авторизоваться\"}\r\n                        className = {'form__btn'}\r\n                        disabled= {!isFormError}\r\n                        handleSuccessfulAuth={this.handleSuccessfulAuth}\r\n                    />\r\n                </form>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport user from '../user.svg';\r\nimport './Sidebar.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component{\r\n        container = React.createRef();\r\n        state = {\r\n            user: '',\r\n            isSideClick : false, \r\n        }\r\n\r\n    componentDidMount() {\r\n        this.setState({user: JSON.parse(localStorage.getItem('user')),});\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mouedown', this.handleClickOutside);\r\n    }\r\n    handleClickOutside = (event) => {\r\n        if(this.container.current && !this.container.current.contains(event.target)) {\r\n            this.setState({ isSideClick: false});\r\n        }\r\n    }\r\n    handleClick = ()=> {\r\n        this.setState( state => { \r\n            return {\r\n                isSideClick: !state.isSideClick,\r\n            };\r\n        })\r\n    };\r\n  render() {\r\n    return (\r\n        <div ref={this.container}>\r\n            <button className= \"Sidebar-btn\"  onClick={this.handleClick} >\r\n                <span className=\"Sidebar-btn__item\"></span>\r\n            </button>\r\n            <menu className={this.state.isSideClick ? \"Sidebar Sidebar_show\": \"Sidebar\" } >\r\n                <div className=\"Sidebar__inner\">\r\n                    <Link to=\"/\" className=\"Sidebar__user\">\r\n                        <img src={this.state.user? this.state.user.avatar_url : user} alt=\"user\" className=\"Sidebar__img\"/>\r\n                    </Link>\r\n                    <p className='Sidebar__name'>{this.state.user? this.state.user.login : ''}</p>\r\n                    <ul className=\"links\">\r\n                        <li className=\"links__item\">\r\n                            <Link to='/terminals' className='links__link'>Терминалы</Link>\r\n                        </li>\r\n                        <li className=\"links__item\">\r\n                            <Link to='/buyers' className='links__link'>Покупатели</Link>\r\n                        </li>\r\n                        <li className=\"links__item\">\r\n                            <Link to='/not-found' className='links__link'>Not Found</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"Sidebar__footer\">Copyright © 2020</div>\r\n                </div>\r\n            </menu>\r\n        </div>  \r\n      );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\"\r\nimport './Terminals.css'\r\n\r\n\r\nconst ListRemove = (props) => {\r\n    return(\r\n        <div className=\"list__box\">\r\n            <button className=\"list__btn\" onClick={ ()=> props.handleClick()} >{props.label}</button>\r\n        </div>\r\n    )\r\n}\r\nconst ListText = (props) => {\r\n    return(\r\n        <div className=\"list__text\">{props.text}</div>\r\n    )\r\n}\r\nconst Post = (props) => {\r\n    return(\r\n        <li className=\"list__item faded\">\r\n            <ListText text={props.name}/>\r\n            <ListText text={props.description}/>\r\n            <ListRemove label=\"Удалить\" handleClick={props.removeList}/>\r\n        </li>\r\n    )\r\n}\r\nconst PostList = (props) => {\r\n    return(\r\n        <ul className=\"list\">\r\n            {\r\n                props.postList.map((item, index)=>\r\n                    <Post key = {index}\r\n                        name={item.name}\r\n                        description={item.description}\r\n                        removeList ={() => props.removeList(index)}\r\n                    />\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nclass Terminals extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n            list: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.addList = this.addList.bind(this);\r\n        this.removeList = this.removeList.bind(this);\r\n    }\r\n    handleChange = (event)  => {\r\n        if(event.target.name === 'name') {\r\n            this.setState({name: event.target.value});\r\n        } else if (event.target.name === 'description'){\r\n            this.setState({description: event.target.value});\r\n        }\r\n    }\r\n    addList = (event) => {\r\n        event.preventDefault();\r\n        const {name, description} = this.state;\r\n        if(name && description) {\r\n            this.setState({\r\n                list: [...this.state.list,\r\n                    {\r\n                        name:  this.state.name,\r\n                        description: this.state.description,\r\n                    }\r\n                ],\r\n                name: '', description: '',\r\n            });\r\n        }\r\n    } \r\n    componentWillMount () {\r\n        const itemsList = localStorage.getItem('items');\r\n        if(itemsList) {\r\n            this.setState({\r\n                list: JSON.parse(localStorage.getItem('items'))\r\n            });\r\n        }\r\n        \r\n    }\r\n    componentDidUpdate () {\r\n        localStorage.setItem('items', JSON.stringify(this.state.list))\r\n    }\r\n    removeList = (index) =>{\r\n        const list = this.state.list.filter((e, idx) => idx !== index);\r\n        this.setState({list});\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"Terminals faded\">\r\n                <form className=\"Terminals__from\" onSubmit={this.addList}>\r\n                    <div className=\"Terminals__from-box\">\r\n                        <span className=\"Terminals__form-text\">Название терминала</span>\r\n                        <input\r\n                            name = \"name\"\r\n                            type=\"text\" \r\n                            className=\"Terminals__from-input\" \r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"Terminals__from-box\">\r\n                        <span className=\"Terminals__form-text\">Описание</span>\r\n                        <input \r\n                            name = \"description\"\r\n                            type=\"text\" \r\n                            className=\"Terminals__from-input\" \r\n                            value={this.state.description}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button className=\"Terminals__form-btn\">Добавить</button>\r\n                </form>\r\n                <div className=\"list-container\">\r\n                    <PostList\r\n                        name={this.state.name}\r\n                        description={this.state.description}\r\n                        postList = {this.state.list}\r\n                        removeList = {this.removeList}\r\n                    />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Terminals;","export const user = [\r\n    {id:'1',name:'Анна', check: '10500', amount: \"4\", total: \"46400\",completed: false},\r\n    {id:'2',name:'Иван', check: '20500', amount: \"8\", total: \"4400\", completed: false},\r\n    {id:'3',name:'Валерий', check: '1000', amount: \"14\", total: \"6400\", completed: false},\r\n    {id:'4',name:'Виктория', check: '500', amount: \"23\", total: \"4600\", completed: false},\r\n    {id:'5',name:'Иван', check: '2900', amount: \"10\", total: \"3000\", completed: false},\r\n    {id:'6',name:'София', check: '32500', amount: \"22\", total: \"5400\", completed: false},\r\n    {id:'7',name:'Анна', check: '350', amount: \"2\", total: \"540\", completed: false},\r\n    {id:'8',name:'Валерий', check: '3200', amount: \"13\", total: \"4080\", completed: false},\r\n    {id:'9',name:'Арсений', check: '2500', amount: \"17\", total: \"52400\" , completed: false},\r\n    {id:'10',name:'Лейла', check: '82500', amount: \"62\", total: \"3400\", completed: false},\r\n    {id:'11',name:'Иван', check: '7500', amount: \"42\", total: \"4400\", completed: false},\r\n    {id:'12',name:'Анна', check: '73500', amount: \"22\", total: \"27400\", completed: false},\r\n    {id:'13',name:'Владлен', check: '22500', amount: \"42\", total: \"5400\", completed: false},\r\n    {id:'14',name:'Валерий', check: '52500', amount: \"82\", total: \"6700\", completed: false},\r\n    {id:'15',name:'Екатерина', check: '2800', amount: \"25\", total: \"9000\", completed: false},\r\n];","import React, { Component } from 'react';\r\nimport {user} from './user';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Buyers.css'\r\nconst TableCell = (props) => {\r\n    return(\r\n        <span className={props.className}>{props.text}</span>\r\n    );\r\n}\r\nconst buyer = user;\r\nconst BuyersHead = () => {\r\n    return(\r\n        <div className=\"table__row\">\r\n            <TableCell className='table__heading' text = 'ID покупаетля'/>\r\n            <TableCell className='table__heading' text = 'Имя покупателя'/>\r\n            <TableCell className='table__heading' text = 'Средний чек'/>\r\n            <TableCell className='table__heading' text = 'Количество покупок'/>\r\n            <TableCell className='table__heading' text = 'Общая выручка'/>\r\n        </div>\r\n    );\r\n}\r\nconst Buyer = (props) =>{\r\n    return(\r\n        <div className=\"table__row\">\r\n            <span className={props.className}>\r\n                <Link to={\"/buyer/\" + props.id} className=\"table__link\">{props.id}</Link> \r\n            </span>\r\n            <TableCell className={props.className} text = {props.name}/>\r\n            <TableCell className={props.className} text = {props.check}/>\r\n            <TableCell className={props.className} text = {props.amount}/>\r\n            <TableCell className={props.className} text = {props.total}/>\r\n        </div>\r\n    );\r\n}\r\nclass BuyerList extends Component{\r\n    render() {\r\n        return(\r\n            <>\r\n                {\r\n                this.props.buyer.map((buyer, i) =>\r\n                    <Buyer\r\n                        \r\n                        className={'table__cell'}\r\n                        key={i}\r\n                        id={buyer.id}\r\n                        name={buyer.name}\r\n                        check={buyer.check}\r\n                        amount={buyer.amount}\r\n                        total={buyer.total} \r\n                    />\r\n                )\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nclass Search extends Component{\r\n    state = {value : ''};\r\n    render() {\r\n        return (\r\n          <div className=\"Search\">\r\n            <input\r\n              onChange={e => this.props.search(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Search here...\"\r\n              className=\"Search__input\"\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nclass Buyers extends Component{\r\n    state = {\r\n        users : buyer,\r\n        filtered: []\r\n    }\r\n    search = search => {\r\n        let currentUsers = [];\r\n        let newList = [];\r\n        if(search !== \"\" ) {\r\n            currentUsers = this.state.users;\r\n            newList = currentUsers.filter(user =>{\r\n                const lc = user.name.toLowerCase();\r\n                const filter = search.toLowerCase();\r\n                return lc.includes(filter);\r\n            });\r\n        } else {\r\n            newList = this.state.users;\r\n        }\r\n        this.setState({filtered: newList})\r\n        console.log(search);\r\n    };\r\n    componentDidMount() {\r\n        this.setState({filtered: this.state.users});\r\n    }\r\n    render() {\r\n        console.log(this.state.users);\r\n        return (\r\n            <section className=\"Buyers faded\">\r\n                <Search search={this.search}/>\r\n                <div className=\"table\" todos={this.state.filtered}>\r\n                    <BuyersHead/>\r\n                    <BuyerList buyer={this.state.filtered}/>\r\n                </div> \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Buyers;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {user} from './user';\r\nimport './Buyers.css'\r\nfunction UserIDOne({match, location}) {\r\n    const {\r\n        params: {id}\r\n    } = match;\r\n    return (\r\n        <div className=\"Users faded\">\r\n            <p className=\"User__text\">\r\n                <span className=\"User__text_span\">ID: </span>\r\n                {id}\r\n            </p>\r\n            <p className=\"User__text\">\r\n                <span className=\"User__text_span\">Name: </span>\r\n                {user[id - 1].name}\r\n            </p>\r\n            <p className=\"User__text\">\r\n                <span className=\"User__text_span\">Check: </span>\r\n                {user[id - 1].check}\r\n            </p>\r\n            <p className=\"User__text\">\r\n                <span className=\"User__text_span\">Amount: </span>\r\n                {user[id - 1].amount}\r\n            </p>\r\n            <p className=\"User__text\">\r\n                <span className=\"User__text_span\">Total: </span>\r\n                {user[id - 1].total}\r\n            </p>\r\n            <Link  to=\"/buyers\" className=\"User__link\">&#8592; Назад</Link> <Link  to={\"/buyer\" + [id] + \"/further-not\"} className=\"User__link\"> Далее &#8594;</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserIDOne;","import React, { Component } from 'react';\nimport Login from './Components/Login/Login';\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Terminals from './Components/Terminals/Terminals';\nimport Buyers from './Components/Buyers/Buyers';\nimport UserId from './Components/Buyers/UserId';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nconst NotFound = () => {\n    return (\n      <div className=\"NotFound faded\">\n          <h1 className='NotFound__titile'>404 </h1>\n          <p className='NotFound__text' >Page Not Found!</p>\n      </div>\n    );\n  }\n  const Button = (props) => {\n    return (\n      <div className=\"Button\">\n          <Link to='/'>\n            <button type=\"button\" onClick={props.onClick} className=\"App__btn\">Выйти</button>\n          </Link>\n      </div>\n    );\n  }  \nclass App extends Component{\n  constructor() {\n    super();\n    this.state = {isSuccess: false} \n  }\n  componentDidMount() {\n    this.setState({isSuccess: JSON.parse(localStorage.getItem('isSuccess'))});\n    console.log(localStorage.getItem('isSuccess'))\n  }\n  handleLogin = (data) => {\n    this.setState({isSuccess: true})\n    localStorage.setItem('isSuccess', this.state.isSuccess);    \n  }\n  logOut = () => {\n    this.setState({isSuccess: false},()=> localStorage.setItem('isSuccess', false))\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Router >\n            { this.state.isSuccess ? <Sidebar/> : null}\n            { this.state.isSuccess ? <Button onClick={this.logOut}/> : null}\n            <Switch>\n              <Route exact \n                path= '/' \n                render={props => (\n                  <Login {...props} handleLogin={this.handleLogin}  />\n                )}\n              />\n              <Route exact path='/terminals' component={Terminals}/>\n              <Route path='/buyers' component={Buyers} />\n              <Route path='/buyer/:id' component={UserId} />\n              <Route component={NotFound} />\n            </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}